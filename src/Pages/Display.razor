@page "/initiative"

@using wrangler.handlers
@inject Memory _memory

@if(_memory.Initiative.Round == 0)
{
    <h2 class="hide">Only you can prevent dungeon fires. Kill the wizard first.</h2>
    <h2>I got that lich a phylactery.  Liches love phylacteries.</h2>
    <h2 class="hide">Meddle not in the affairs of dragons, for you are crunchy and good with ketchup.</h2>
    <h2 class="hide">How many kobolds does it take to paint a tavern red? Depends how hard you throw them.</h2>
    <h2 class="hide">A human, a dragonborn, and a halfling walk into a bar. The dwarf had darkvision.</h2>
    <h2 class="hide">If you cast Speak with Plants and Speak with Dead you should be able to talk to furniture.</h2>
}
else
{
    <div class="panel">
        <div class="pane">
            @foreach(var combatant in _memory.Initiative.Combatants.Where(c => !c.TurnTaken)){
                <div class="@(!combatant.IsActive ? "combatant not-active" : "combatant")">
                    <div>
                        @combatant.Name
                    </div>
                </div>
            }
        </div>
    </div>
}


@code {
    protected override void OnInitialized()
    {
        _memory.OnChange += Update;
    }

    private void Update()
    {
        InvokeAsync(() => {
            StateHasChanged();
        });
    }
}
