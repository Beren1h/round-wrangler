@page "/control"

@using wrangler.data
@using wrangler.handlers

@inject MemoryBank _bank
@inject CombatantHandler _combatant
@inject ControlHandler _control
@inject CombatHandler _combat
@inject AffectHandler _affect

<div class="frame">
    <div class="header">
        <div class="round">
                <Widget 
                    Text=@("Round " + _bank.Combat.Round.ToString())
                    Theme="dark"
                    BodyClick="()=>_combat.NextRound()"
                    RemoveClick="()=>_combat.EndCombat()"
                />             
        </div>
        <div class="turn @_control.DetermineConcentrationCssClass()">@_bank.Combat.Turn</div>
    </div>
    <div class="panels">
        <div class="list wide debug0">
            <Forms />
        </div>
        <div class="list debug1">
            @foreach(var combatant in _bank.Combatants)
            {
                <Widget 
                    Text=@combatant.Name 
                    Theme="dark"
                    Nested="_control.GetAffectWidgets(combatant)"
                    CssClass=@_control.DetermineCombatantWidgetCssClass(combatant)
                    BodyClick="()=>_combat.SetTurn(combatant.Name)"
                    RemoveClick="()=>_combatant.RemoveCombatant(combatant.Name)"
                />    
            }
        </div>
        <div class="list debug2">
            @foreach(var affect in _bank.Affects)
            {
                <Widget 
                    Text=@affect.Description
                    Theme="red"
                />                   
            }
        </div>
    </div>
</div>

@code {


    protected override void OnInitialized()
    {
        _combatant.OnChange += Update;
        _combat.OnChange += Update;
        _affect.OnChange += Update;
    }

    private void Update()
    {
        InvokeAsync(() => {
            StateHasChanged();
        });
    } 






    private string Add { get; set;} = "Willma";
    public bool IsConcentration { get; set; }
    private string msg = "asd";
    private void Say(string message)
    {
        Console.WriteLine(message);
    }
}