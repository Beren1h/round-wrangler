@page "/control"

@using wrangler.data
@using wrangler.handlers

@inject MemoryBank _bank
@inject CombatantHandler _combatant
@inject ControlHandler _control
@inject CombatHandler _combat
@inject AffectHandler _affect

<div class="frame">
    <div class="panels">
        
        <div class="list wide">
            <Forms />
        </div>
        <div class="list">
            <div class="list">
                <Widget 
                    Text=@HeaderMode().display
                    Reference=@HeaderMode().reference
                    BodyClick=@HeaderMode().bodyClick
                    RemoveClick=@HeaderMode().removeClick
                />  
                <div class="list row">
                    <div class="list">
                        @foreach(var combatant in _bank.Combatants)
                        {
                            <Widget 
                                Text=@combatant.Name 
                                Reference=@combatant
                                BodyClick="()=>_control.DetermineCombatantWidgetBodyClickAction(combatant)"
                                RemoveClick="()=>_combatant.RemoveCombatant(combatant)"
                            />    
                        }
                    </div>
                    <div class="list">
                        @foreach(var affect in _bank.Affects)
                        {
                            <Widget 
                                Text=@affect.Description
                                Reference=@affect
                                BodyClick="()=>_affect.AssignAffect(affect)"
                                RemoveClick="()=>_affect.RemoveAffect(affect)"
                            />                   
                        }
                    </div>
                </div>
            </div>
        </div>

        @* <div class="list wide debug0">
        </div>
   
        <div class="list debug1">
           
            <div class="list">
                 

            </div>
            <div class="list">

            </div>

        </div>
        <div class="list other debug2">

        </div> *@
    </div>
</div>

@code {

    private (string display, Action bodyClick, Action removeClick, string reference) HeaderMode()
    {
        (string display, Action bodyClick, Action removeClick, string reference) modes = default;

        if (_bank.AffectBeingAssigned != null)
        {
            modes.display = $"Assigning {_bank.AffectBeingAssigned.Description}";
            modes.bodyClick = () => {};
            modes.removeClick = () => {};
            modes.reference = "assignment";
            //return $"Assigning {_bank.AffectBeingAssigned.Description}";
        }
        else
        {
            modes.display = $"Round {_bank.Combat.Round.ToString()}";
            modes.bodyClick = () => _combat.NextRound();
            modes.removeClick = () => _combat.EndCombat();
            modes.reference = "round";
            //return $"Round {_bank.Combat.Round.ToString()}";
        }

        return modes;
    }
    
    protected override void OnInitialized()
    {
        _combatant.OnChange += Update;
        _combat.OnChange += Update;
        _affect.OnChange += Update;
    }

    private void Update()
    {
        InvokeAsync(() => {
            StateHasChanged();
        });
    } 
}